# -*- coding: utf-8 -*-
"""My Connecting Module

"""
__author__ = 'xero'
__email__ = "volleyp7689@gmail.com"

import urllib
import urllib2
import time
import random
import re

from twsec.settings.config import TWSE_EXCHANGE

def twse_gen_url(url, args):
    """
    TWSE using window.location.replace() method in order to jump to search result.
    This function will return the redirect url which is generated by javascript.
    """
    #
    url_values = urllib.urlencode(args)
    get_url = url + '?' + url_values
    window_location_replace_response = urllib2.urlopen(get_url)

    #
    pattern_script = '<script language="javascript">(.*?)</script>'
    pattern_replace_loction = '"(.*?)"'
    wlr = re.findall(pattern_script, window_location_replace_response.read(), re.DOTALL)
    gen_url = re.findall(pattern_replace_loction, ''.join(wlr), re.DOTALL)

    return ''.join(gen_url)


def get_request(gen_url, info_flag):
    """
    gen_url: Redirect url generated by window.location.replace()
    info_flag: Exchange information flag
    """
    while True:
        try:
            url = TWSE_EXCHANGE + "/" + info_flag + "/" + gen_url
            response = urllib2.urlopen(url)
            return response.read()

        except urllib2.URLError:
            print urllib2.URLError
            time.sleep(random.random() * 10)
            continue


def post_request(url, req_arg):
    """Sending a post request, and return the string of it's response.

    Args:
        url (string): URL of target web page.
        req_arg (dict): Arguments which are going to be passing by POST request.
        delay (int): Stop the url request temporarily, and retry to connect to the server.

    Returns:
        response.read() (string)
    """
    while True:
        try:
            data = urllib.urlencode(req_arg)
            request = urllib2.Request(url, data)
            response = urllib2.urlopen(request)
            return response.read()
        except urllib2.URLError:
            time.sleep(random.random() * 10)
            continue